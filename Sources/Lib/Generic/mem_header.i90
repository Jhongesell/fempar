! Copyright (C) 2014 Santiago Badia, Alberto F. Mart√≠n and Javier Principe
!
! This file is part of FEMPAR (Finite Element Multiphysics PARallel library)
!
! FEMPAR is free software: you can redistribute it and/or modify
! it under the terms of the GNU General Public License as published by
! the Free Software Foundation, either version 3 of the License, or
! (at your option) any later version.
!
! FEMPAR is distributed in the hope that it will be useful,
! but WITHOUT ANY WARRANTY; without even the implied warranty of
! MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
! GNU General Public License for more details.
!
! You should have received a copy of the GNU General Public License
! along with FEMPAR. If not, see <http://www.gnu.org/licenses/>.
!
! Additional permission under GNU GPL version 3 section 7
!
! If you modify this Program, or any covered work, by linking or combining it 
! with the Intel Math Kernel Library and/or the Watson Sparse Matrix Package 
! and/or the HSL Mathematical Software Library (or a modified version of them), 
! containing parts covered by the terms of their respective licenses, the
! licensors of this Program grant you additional permission to convey the 
! resulting work. 
!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!***********************************************************************
!***********************************************************************
! Interfaces for generic (re)allocation, free and movealloc routines 
! defined in mem_body.i90. The following variables need to be defined
! (see memor.f90 for an example).
!
! generic_memalloc_interface
! generic_memrealloc_interface
! generic_memrealloc_if_more_space_needed
! generic_memfree_interface
! generic_memmovealloc_interface
!
!***********************************************************************
!***********************************************************************
  interface generic_memalloc_interface
     module procedure generic_memalloc_1, generic_memalloc_2, &
          &           generic_memalloc_3, generic_memalloc_4
  end interface generic_memalloc_interface
  interface generic_memrealloc_interface
     module procedure generic_memrealloc_1, generic_memrealloc_2, &
          &           generic_memrealloc_3, generic_memrealloc_4
  end interface generic_memrealloc_interface
  interface generic_memrealloc_if_more_space_needed_interface
    module procedure generic_memrealloc_if_more_space_needed_1, &
                     generic_memrealloc_if_more_space_needed_2
  end interface generic_memrealloc_if_more_space_needed_interface
#ifdef generic_memfree_interface
  interface generic_memfree_interface
     module procedure generic_memfree_1,generic_memfree_2, &
          &           generic_memfree_3,generic_memfree_4
  end interface generic_memfree_interface
#endif
#ifdef generic_memmovealloc_interface
  interface generic_memmovealloc_interface
     module procedure generic_memmovealloc_1,generic_memmovealloc_2, &
          &           generic_memmovealloc_3,generic_memmovealloc_4
  end interface generic_memmovealloc_interface
#endif
