! Copyright (C) 2014 Santiago Badia, Alberto F. Mart√≠n and Javier Principe
!
! This file is part of FEMPAR (Finite Element Multiphysics PARallel library)
!
! FEMPAR is free software: you can redistribute it and/or modify
! it under the terms of the GNU General Public License as published by
! the Free Software Foundation, either version 3 of the License, or
! (at your option) any later version.
!
! FEMPAR is distributed in the hope that it will be useful,
! but WITHOUT ANY WARRANTY; without even the implied warranty of
! MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
! GNU General Public License for more details.
!
! You should have received a copy of the GNU General Public License
! along with FEMPAR. If not, see <http://www.gnu.org/licenses/>.
!
! Additional permission under GNU GPL version 3 section 7
!
! If you modify this Program, or any covered work, by linking or combining it 
! with the Intel Math Kernel Library and/or the Watson Sparse Matrix Package 
! and/or the HSL Mathematical Software Library (or a modified version of them), 
! containing parts covered by the terms of their respective licenses, the
! licensors of this Program grant you additional permission to convey the 
! resulting work. 
!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
subroutine coarse_dof_object_accessor_create ( this, &
                                               field_id, &
                                               coarse_dof_object_lid, &
                                               fe_space )
  implicit none
  class(coarse_dof_object_accessor_t)        , intent(inout) :: this
  integer(ip)                                , intent(in)    :: field_id
  integer(ip)                                , intent(in)    :: coarse_dof_object_lid
  type(coarse_fe_space_t), target            , intent(in)    :: fe_space
  call this%free()
  assert ( field_id >= 1 .and. field_id <= fe_space%get_number_fields() )  
  if ( coarse_dof_object_lid >  fe_space%num_coarse_dofs_per_field(field_id)) then
    call this%coarse_fe_object_accessor_t%create(fe_space%get_number_coarse_fe_objects()+1, &
                                                 fe_space)
  else
    call this%coarse_fe_object_accessor_t%create(int(fe_space%coarse_n_face_lids_coarse_dofs_per_field(field_id)%a(coarse_dof_object_lid),ip), &
                                                 fe_space)
  end if  
  this%field_id = field_id
  this%coarse_dof_object_lid = coarse_dof_object_lid
end subroutine coarse_dof_object_accessor_create

subroutine coarse_dof_object_accessor_free ( this)
  implicit none
  class(coarse_dof_object_accessor_t), intent(inout) :: this
  call this%coarse_fe_object_accessor_t%free()
  this%field_id = -1
  this%coarse_dof_object_lid = -1
  nullify ( this%coarse_fe_space )
end subroutine coarse_dof_object_accessor_free

subroutine coarse_dof_object_accessor_next(this)
  implicit none
  class(coarse_dof_object_accessor_t), intent(inout) :: this
  this%coarse_dof_object_lid = this%coarse_dof_object_lid + 1
  call this%set_lid(this%coarse_dof_object_lid)
end subroutine coarse_dof_object_accessor_next

subroutine coarse_dof_object_accessor_set_lid(this, lid)
  implicit none
  class(coarse_dof_object_accessor_t), intent(inout) :: this
  integer(ip)                        , intent(in)    :: lid
  this%coarse_dof_object_lid = lid
  if ( lid >  this%coarse_fe_space%num_coarse_dofs_per_field(this%field_id) ) then
    call this%coarse_fe_object_accessor_t%set_lid(this%coarse_fe_space%get_number_coarse_fe_objects()+1)
  else
    call this%coarse_fe_object_accessor_t%set_lid(int(this%coarse_fe_space%coarse_n_face_lids_coarse_dofs_per_field(this%field_id)%a(lid),ip))
  end if 
end subroutine coarse_dof_object_accessor_set_lid

function coarse_dof_object_accessor_get_number_dofs_on_object(this)
  implicit none
  class(coarse_dof_object_accessor_t), intent(inout) :: this
  integer(ip) :: coarse_dof_object_accessor_get_number_dofs_on_object
  type(list_iterator_t) :: dofs_on_object_iterator
  dofs_on_object_iterator = this%get_dofs_on_object_iterator()
  coarse_dof_object_accessor_get_number_dofs_on_object = &
    this%coarse_fe_space%fine_dofs_coarse_dofs_per_field(this%field_id)%get_sublist_size(this%coarse_dof_object_lid)
end function coarse_dof_object_accessor_get_number_dofs_on_object

function coarse_dof_object_accessor_get_dofs_on_object_iterator(this)
  implicit none
  class(coarse_dof_object_accessor_t), intent(inout) :: this
  type(list_iterator_t) :: coarse_dof_object_accessor_get_dofs_on_object_iterator
  coarse_dof_object_accessor_get_dofs_on_object_iterator = &
    this%coarse_fe_space%fine_dofs_coarse_dofs_per_field(this%field_id)%create_iterator(this%coarse_dof_object_lid)
end function coarse_dof_object_accessor_get_dofs_on_object_iterator

