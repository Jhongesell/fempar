#################################################################
# Parallel tests
#################################################################

IF(MPI_FOUND)

    IF(NOT MPIEXEC)
        MESSAGE(WARNING "MPIEXEC was not found. Parallel TESTS will not be performed!")
    ENDIF()

    FILE(GLOB TESTS_PAR_SRC *.f90 *.F90)
    SET(TESTS_PAR_SRC ${TESTS_PAR_SRC} PARENT_SCOPE)

    FOREACH(TEST_SRC ${TESTS_PAR_SRC})
        GET_FILENAME_COMPONENT(EXE_NAME ${TEST_SRC} NAME_WE)
        UNSET(${EXE_NAME}_MODULES_SRC CACHE)
        SET(${EXE_NAME}_MODULES_DIR ${PAR_TESTS_PATH}/${EXE_NAME})
        IF(EXISTS "${${EXE_NAME}_MODULES_DIR}" AND IS_DIRECTORY "${${EXE_NAME}_MODULES_DIR}")
            FILE(GLOB ${EXE_NAME}_MODULES_SRC ${${EXE_NAME}_MODULES_DIR}/*.f90 ${${EXE_NAME}_MODULES_DIR}/*.F90)
        ENDIF()
        ADD_EXECUTABLE(${EXE_NAME} ${TEST_SRC} ${${EXE_NAME}_MODULES_SRC})
        TARGET_LINK_LIBRARIES(${EXE_NAME} ${PROJECT_NAME})
        TARGET_LINK_LIBRARIES(${EXE_NAME} ${MPI_Fortran_LIBRARIES})
        TARGET_LINK_LIBRARIES(${EXE_NAME} ${EXT_PROJ_LIBS})
        FOREACH (EXT_LIB ${EXT_LIBS})
            TARGET_LINK_LIBRARIES(${EXE_NAME} ${${EXT_LIB}_LIBRARIES})
        ENDFOREACH()
	    IF(MPIEXEC)
            IF(EXISTS ${SCRIPTS_TESTS_PATH}/${EXE_NAME})
                ADD_TEST(${EXE_NAME}_TEST ${SCRIPTS_TESTS_PATH}/${EXE_NAME} ${MPIEXEC} ${MPIEXEC_NUMPROC_FLAG} ${EXECUTABLE_OUTPUT_PATH}/${EXE_NAME} ${DATA_TESTS_PATH}/${EXE_NAME})
            ENDIF()
        ENDIF()
    ENDFOREACH()

ENDIF()
