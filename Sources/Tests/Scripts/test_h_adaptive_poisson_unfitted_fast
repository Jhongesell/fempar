#!/bin/sh
SCRIPT_NAME=$(basename $0)
TEST_BINARY_PATH="$1"
TEST_INPUT_DATA_PATH="$2"
final_exit_code=0
if [ -f "$TEST_BINARY_PATH" ]
then
 #if [ -d "$TEST_INPUT_DATA_PATH" ] 
 #  then
      ###############################################################################################################################
      # Scalar-valued tests
      ###############################################################################################################################

      vbcs="diri"
      vmts="aggr stnd"
      vods="1 2"
      vdim="2 3"
      vpat="uniform"  ## debug-1 debug-2"
      
      ilvs=2
      for idim in $vdim; do
        for iods in $vods; do
          for ibcs in $vbcs; do
            for imts in $vmts; do
              for ipat in $vpat; do
                if [ $idim -ne 3 -o $iods -ne 2 ] ; then
        
                  prefix=${imts}_${ipat}_${ibcs}_l${ilvs}_p${iods}
        
                  is_diri=".true."
                  if [ $ibcs = neum ]; then
                    is_diri="false"
                  fi
        
                  uconstraints=".true."
                  is_bconst=".true."
                  if [ $imts = stnd ]; then
                    uconstraints=".false."
                    is_bconst=".false."
                  fi

                  sdiri=".false."
                  dom="0.0 1.0"
                  if [ $ipat = "debug-1" ]; then
                    sdiri=".false."
                    dom="-1.0 1.0"
                  fi
        
                  cmd="$TEST_BINARY_PATH -tt structured -dim $idim -rpattern $ipat -sdiri $sdiri -dom $dom -wsolution .false. -order $iods -in_space .true.  -check .true. -maxl $ilvs -wmatrix .false. -uconstraints $uconstraints -is_diri $is_diri -is_bconst $is_bconst -d $SCRIPT_NAME -p $SCRIPT_NAME"
        
                  echo $cmd
                  $cmd
                  if [ $? -ne 0 ] 
                  then
                   final_exit_code=1
                  fi
        
                fi
              done
            done
          done
        done
      done

      ###############################################################################################################################
      # Vector-valued tests
      ###############################################################################################################################
      
      vbcs="diri"
      vmts="aggr stnd"
      vods="2"
      vdim="2"
      vpat="uniform"  ## debug-1 debug-2"
      
      ilvs=2
      for idim in $vdim; do
        for iods in $vods; do
          for ibcs in $vbcs; do
            for imts in $vmts; do
              for ipat in $vpat; do
                if [ $idim -ne 3 -o $iods -ne 2 ] ; then
        
                  prefix=${imts}_${ipat}_${ibcs}_l${ilvs}_p${iods}
        
                  is_diri=".true."
                  if [ $ibcs = neum ]; then
                    is_diri="false"
                  fi
        
                  uconstraints=".true."
                  is_bconst=".true."
                  if [ $imts = stnd ]; then
                    uconstraints=".false."
                    is_bconst=".false."
                  fi

                  sdiri=".false."
                  dom="0.0 1.0"
                  if [ $ipat = "debug-1" ]; then
                    sdiri=".false."
                    dom="-1.0 1.0"
                  fi
        
                  cmd="$TEST_BINARY_PATH -tt structured -dim $idim -rpattern $ipat -sdiri $sdiri -dom $dom -wsolution .false. -order $iods -in_space .true.  -check .true. -maxl $ilvs -wmatrix .false. -uconstraints $uconstraints -is_diri $is_diri -is_bconst $is_bconst -lt vector -d $SCRIPT_NAME -p $SCRIPT_NAME"
        
                  echo $cmd
                  $cmd
                  if [ $? -ne 0 ] 
                  then
                   final_exit_code=1
                  fi
        
                fi
              done
            done
          done
        done
      done



   #else
   #   echo "$0: input data directory not found!"
   #   final_exit_code=1
   #fi
else
  echo "$0: BINARY not found! Value PROVIDED: $1."
  final_exit_code=1
fi
rm -Rf $TEST_INPUT_FILE
exit $final_exit_code
