#!/bin/sh
MPIEXEC_PATH="$1"
MPIEXEC_NP_FLAG="$2"
TEST_BINARY_PATH="$3"
TEST_INPUT_DATA_PATH="$4"
final_exit_code=0
if [ -f "$TEST_BINARY_PATH" ]
then
 if [ -d "$TEST_INPUT_DATA_PATH" ] 
   then

      # Square + Quads        
      for gorder in 1 2 3 4 5 6
      do
       for order in 1 2 3 4 5 6
        do
          if [ $order -ge $gorder ]
          then
             echo "$MPIEXEC_PATH $MPIEXEC_NP_FLAG 7 $TEST_BINARY_PATH -d $TEST_INPUT_DATA_PATH/PARTS4_square_quads --prefix 'square_quads' --nparts '4' -gorder $gorder -order $order"
             $MPIEXEC_PATH $MPIEXEC_NP_FLAG 7 $TEST_BINARY_PATH -d $TEST_INPUT_DATA_PATH/PARTS4_square_quads --prefix 'square_quads' --nparts '4' -gorder $gorder -order $order
             if [ $? -ne 0 ] 
             then
               final_exit_code=1
             fi
          fi
       done
    done

      # Square + Tets        
      for gorder in 1 #2 3 4 5 6
      do
       for order in 1 2 3 #4 5 6
        do
          if [ $order -ge $gorder ]
          then
             echo "$MPIEXEC_PATH $MPIEXEC_NP_FLAG 7 $TEST_BINARY_PATH -d $TEST_INPUT_DATA_PATH/PARTS4_square_tetrahedra --prefix 'square_tetrahedra' --nparts '4' -gorder $gorder -order $order"
             $MPIEXEC_PATH $MPIEXEC_NP_FLAG 7 $TEST_BINARY_PATH -d $TEST_INPUT_DATA_PATH/PARTS4_square_tetrahedra --prefix 'square_tetrahedra' --nparts '4' -gorder $gorder -order $order
             if [ $? -ne 0 ]
             then
               final_exit_code=1
             fi
          fi
       done
    done

    # Cube + Hexas        
    for gorder in 1 #2 3 4 5 6
      do
       for order in 2 3 #1 2 3 4 5 6
        do
          if [ $order -ge $gorder ]
          then
             echo "$MPIEXEC_PATH $MPIEXEC_NP_FLAG 7 $TEST_BINARY_PATH -d $TEST_INPUT_DATA_PATH/PARTS4_cube_hexas --prefix 'cube_hexas' --nparts '4' -gorder $gorder -order $order"
             $MPIEXEC_PATH $MPIEXEC_NP_FLAG 7 $TEST_BINARY_PATH -d $TEST_INPUT_DATA_PATH/PARTS4_cube_hexas --prefix 'cube_hexas' --nparts '4' -gorder $gorder -order $order
             if [ $? -ne 0 ] 
             then
               final_exit_code=1
             fi
          fi
       done
    done

    # Cube + Tets        
    for gorder in 1 #2 3 4 5 6
      do
       for order in 2 #1 2 3 4 5 6
        do
          if [ $order -ge $gorder ]
          then
             echo "$MPIEXEC_PATH $MPIEXEC_NP_FLAG 7 $TEST_BINARY_PATH -d $TEST_INPUT_DATA_PATH/PARTS4_cube_tetrahedra --prefix 'cube_tetrahedra' --nparts '4' -gorder $gorder -order $order"
             $MPIEXEC_PATH $MPIEXEC_NP_FLAG 7 $TEST_BINARY_PATH -d $TEST_INPUT_DATA_PATH/PARTS4_cube_tetrahedra --prefix 'cube_tetrahedra' --nparts '4' -gorder $gorder -order $order
             if [ $? -ne 0 ] 
             then
               final_exit_code=1
             fi
          fi
       done
    done



   else
      echo "$0: input data directory not found!"
      final_exit_code=1
   fi
else
  echo "$0: BINARY not found! Value PROVIDED: $3."
  final_exit_code=1
fi
rm -Rf $TEST_COMBINATIONS_FILE_NAME
exit $final_exit_code 
