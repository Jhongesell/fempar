!==================================================================================================
subroutine set_default_params(this)
  implicit none
  class(test_nsi_iss_oss_params_t), intent(inout) :: this

  ! IO parameters
  this%default_dir_path     = 'data'
  this%default_prefix       = 'test'
  this%default_dir_path_out = 'output'

  ! Mesh
  this%default_structured_mesh         = '.true.'
  this%default_number_elements         = '2 2'
  this%default_number_parts            = '1 1'
  this%default_number_sockets          = '1 1'
  this%default_discretization_type     = '0 0'
  this%default_domain_length           = '1.0 1.0'
  this%default_periodic_boundaries     = '0 0'
  this%default_origin                  = '0.0 0.0'
  this%default_stretching_parameter    = '2.75 2.75'
  this%default_elements_boundary_layer = '0 0'
  this%default_size_boundary_layer     = '0.0 0.0'
  this%default_material_case           = '0'
  
  ! FE space
  this%default_velocity_order = '2'
  this%default_pressure_order = '1'

  ! Problem
  this%default_viscosity             = '1.0'
  this%default_c1                    = '12.0'
  this%default_c2                    = '4.0'
  this%default_cc                    = '1.0'
  this%default_elemental_length_flag = '0'
  this%default_convection_activated  = '.true.'

  ! Solution
  this%default_is_analytical          = '.true.'
  this%default_is_initial             = '.true.'
  this%default_is_temporal            = '.false.'
  this%default_analytical_velocity_id = '1'
  this%default_analytical_pressure_id = '1'

  ! Time integration
  this%default_initial_time = '0.0'

end subroutine set_default_params

!==================================================================================================
subroutine add_params_to_cli(this,cli,group)
  implicit none
  class(test_nsi_iss_oss_params_t) , intent(in)    :: this
  type(Type_Command_Line_Interface), intent(inout) :: cli
  character(*)                     , intent(in)    :: group
  ! Locals
  integer(ip) :: error

  ! IO parameters
  call cli%add(group=trim(group),switch='--dir_path',switch_ab='-pwd_in',                           &
       &       help='Directory of the source files',required=.false., act='store',                  &
       &       def=trim(this%default_dir_path),error=error); check(error==0)
  call cli%add(group=trim(group),switch='--prefix',switch_ab='-prf',help='Prefix',required=.false., &
       &       act='store',def=trim(this%default_prefix),error=error); check(error==0)
  call cli%add(group=trim(group),switch='--dir_path_out',switch_ab='-pwd_out',                      &
       &       help='Output Directory',required=.false.,act='store',                                &
       &       def=trim(this%default_dir_path_out),error=error); check(error==0)

  ! Mesh
  call cli%add(group=trim(group),switch='--structured_mesh',switch_ab='-str',                       &
       &       help='Structured mesh (.true., .false.)',required=.false., act='store',              &
       &       def=trim(this%default_structured_mesh),error=error); check(error==0)
  call cli%add(group=trim(group),switch='--num_elements',switch_ab='-ne',                           &
       &       help='Number of elements per direction',required=.false.,act='store',nargs='*',      &
       &       def=trim(this%default_number_elements),error=error); check(error==0)
  call cli%add(group=trim(group),switch='--num_parts',switch_ab='-np',                              &
       &       help='Number of parts per direction',required=.false.,act='store',nargs='*',         &
       &       def=trim(this%default_number_parts),error=error); check(error==0)
  call cli%add(group=trim(group),switch='--num_sockets',switch_ab='-ns',                            &
       &       help='Number of sockets per direction',required=.false.,act='store',nargs='*',       &
       &       def=trim(this%default_number_sockets),error=error); check(error==0)
  call cli%add(group=trim(group),switch='--discretization_type',                                    &
       &       help='Discretization type per direction (0=uniform, 1=cubic, 2=tanh, 3=imh+unif, 4:imh+tanh)', &
       &       required=.false.,act='store',nargs='*',def=trim(this%default_discretization_type),   &
       &       error=error); check(error==0)
  call cli%add(group=trim(group),switch='--domain_length',switch_ab='-dl',                          &
       &       help='Domain length per direction',required=.false.,act='store',nargs='*',           &
       &       def=trim(this%default_domain_length),error=error); check(error==0)
  call cli%add(group=trim(group),switch='--periodicity',switch_ab='-peri',                          &
       &       help='Periodicity per direction (0: No, 1: Yes)', required=.false.,act='store',      &
       &       nargs='*',def=trim(this%default_periodic_boundaries),error=error); check(error==0)
  call cli%add(group=trim(group),switch='--origin',switch_ab='-O',help='Origin coordinates',        &
       &       required=.false.,act='store',nargs='*',def=trim(this%default_origin),error=error)
  check(error==0)
  call cli%add(group=trim(group),switch='--stretching',switch_ab='-st',help='Stretching parameter', &
       &       required=.false.,act='store',nargs='*',def=trim(this%default_stretching_parameter),  &
       &       error=error); check(error==0)
  call cli%add(group=trim(group),switch='--num_elements_bound_layer',switch_ab='-nb',               &
       &       help='Number of elements in the boundary layer per direction',required=.false.,      &
       &       act='store',nargs='*',def=trim(this%default_elements_boundary_layer),error=error)
  check(error==0)
  call cli%add(group=trim(group),switch='--size_bound_layer',switch_ab='-sb',                       &
       &       help='Size of the boundary layer per direction',required=.false.,act='store',        &
       &       nargs='*',def=trim(this%default_size_boundary_layer),error=error); check(error==0)
  call cli%add(group=trim(group),switch='--material_case',switch_ab='-mc',help='Material case',     &
       &       required=.false.,act='store',def=trim(this%default_material_case),error=error)
  check(error==0)

  ! FE space
  call cli%add(group=trim(group),switch='--velocity_order',switch_ab='-vo',                         &
       &       help='Velocity interpolation order',required=.false., act='store',                   &
       &       def=trim(this%default_velocity_order),error=error); check(error==0)
  call cli%add(group=trim(group),switch='--pressure_order',switch_ab='-po',                         &
       &       help='Pressure interpolation order',required=.false., act='store',                   &
       &       def=trim(this%default_pressure_order),error=error); check(error==0)

  ! Problem
  call cli%add(group=trim(group),switch='--viscosity',switch_ab='-nu',help='Viscosity',             &
       &       required=.false., act='store',def=trim(this%default_viscosity),error=error) 
  check(error==0)
  call cli%add(group=trim(group),switch='--c1',switch_ab='-c1',help='c1 stabilization constant',    &
       &       required=.false., act='store',def=trim(this%default_c1),error=error); check(error==0)
  call cli%add(group=trim(group),switch='--c2',switch_ab='-c2',help='c2 stabilization constant',    &
       &       required=.false., act='store',def=trim(this%default_c2),error=error); check(error==0)
  call cli%add(group=trim(group),switch='--cc',switch_ab='-cc',help='cc stabilization constant',    &
       &       required=.false., act='store',def=trim(this%default_cc),error=error); check(error==0)
  call cli%add(group=trim(group),switch='--elemental_length',switch_ab='-h_flg',                    &
       &       help='Elemental length computation (0: standard, 1: minimum, 2: maximum)',           &
       &       required=.false., choices='0,1,2',act='store',                                       &
       &       def=trim(this%default_elemental_length_flag),error=error); check(error==0)
  call cli%add(group=trim(group),switch='--convection',switch_ab='-cnv',                            &
       &       help='Activate convection',required=.false., act='store',                            &
       &       def=trim(this%default_convection_activated),error=error); check(error==0)  

  ! Solution
  call cli%add(group=trim(group),switch='--analytical_solution',switch_ab='-ana',                   &
       &       help='Is it an analytical solution?',required=.false., act='store',                  &
       &       def=trim(this%default_is_analytical),error=error); check(error==0)  
  call cli%add(group=trim(group),switch='--initial_solution',switch_ab='-ini',                      &
       &       help='Is it an initial solution?',required=.false., act='store',                     &
       &       def=trim(this%default_is_initial),error=error); check(error==0)  
  call cli%add(group=trim(group),switch='--temporal_solution',switch_ab='-tmp',                     &
       &       help='Is it a temporal solution?',required=.false., act='store',                     &
       &       def=trim(this%default_is_temporal),error=error); check(error==0)  
  call cli%add(group=trim(group),switch='--analytical_velocity_function',switch_ab='-av',           &
       &       help='Analytical velocity function identifier',required=.false., act='store',        &
       &       def=trim(this%default_analytical_velocity_id),error=error); check(error==0)  
  call cli%add(group=trim(group),switch='--analytical_pressure_function',switch_ab='-ap',           &
       &       help='Analytical pressure function identifier',required=.false., act='store',        &
       &       def=trim(this%default_analytical_pressure_id),error=error); check(error==0)  

  ! Time integration
  call cli%add(group=trim(group),switch='--initial_time',switch_ab='-it',help='Initial time',       &
       &       required=.false., act='store',def=trim(this%default_initial_time),error=error)
  check(error==0)  

end subroutine add_params_to_cli
