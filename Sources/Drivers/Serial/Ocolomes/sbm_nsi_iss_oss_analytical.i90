! Copyright (C) 2014 Santiago Badia, Alberto F. Mart√≠n and Javier Principe
!
! This file is part of FEMPAR (Finite Element Multiphysics PARallel library)
!
! FEMPAR is free software: you can redistribute it and/or modify
! it under the terms of the GNU General Public License as published by
! the Free Software Foundation, either version 3 of the License, or
! (at your option) any later version.
!
! FEMPAR is distributed in the hope that it will be useful,
! but WITHOUT ANY WARRANTY; without even the implied warranty of
! MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
! GNU General Public License for more details.
!
! You should have received a copy of the GNU General Public License
! along with FEMPAR. If not, see <http://www.gnu.org/licenses/>.
!
! Additional permission under GNU GPL version 3 section 7
!
! If you modify this Program, or any covered work, by linking or combining it 
! with the Intel Math Kernel Library and/or the Watson Sparse Matrix Package 
! and/or the HSL Mathematical Software Library (or a modified version of them), 
! containing parts covered by the terms of their respective licenses, the
! licensors of this Program grant you additional permission to convey the 
! resulting work. 
!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!====================================================================================================
subroutine initialize_from_cli(this,cli,group)
  implicit none
  class(nsi_iss_oss_analytical_functions_t), intent(inout) :: this
  type(Type_Command_Line_Interface)        , intent(inout) :: cli
  character(len=:), allocatable            , intent(in)    :: group
  ! Locals
  integer(ip) :: istat

  ! Getters
  call cli%get(group=trim(group),switch='-av',val=this%velocity_function_id,error=istat)
  check(istat==0)
  call cli%get(group=trim(group),switch='-ap',val=this%velocity_function_id,error=istat)
  check(istat==0)

  this%velocity%swich          = this%velocity_function_id
  this%dt_velocity%swich       = this%velocity_function_id
  this%velocity_gradient%swich = this%velocity_function_id
  this%velocity_grad_div%swich = this%velocity_function_id
  this%pressure_gradient%swich = this%pressure_function_id

end subroutine initialize_from_cli

!====================================================================================================
subroutine velocity_get_value_space_time(this,point,time,result)
  implicit none
  class(velocity_function_t), intent(in)    :: this
  type(point_t)             , intent(in)    :: point
  real(rp)                  , intent(in)    :: time
  type(vector_field_t)      , intent(inout) :: result
  
  call result%init(0.0_rp)
  select case(this%swich)
     case(1) ! u = (x,-y,0)
        call result%set(1,point%get(1))
        call result%set(2,1.0_rp*point%get(2))
  end select

end subroutine velocity_get_value_space_time

!====================================================================================================
subroutine dt_velocity_get_value_space_time(this,point,time,result)
  implicit none
  class(dt_velocity_function_t), intent(in)    :: this
  type(point_t)                , intent(in)    :: point
  real(rp)                     , intent(in)    :: time
  type(vector_field_t)         , intent(inout) :: result
  
  call result%init(0.0_rp)
  select case(this%swich)
     case(1) ! u = (x,-y,0)
  end select

end subroutine dt_velocity_get_value_space_time

!====================================================================================================
subroutine velocity_gradient_get_value_space_time(this,point,time,result)
  implicit none
  class(velocity_gradient_function_t), intent(in)    :: this
  type(point_t)                      , intent(in)    :: point
  real(rp)                           , intent(in)    :: time
  type(tensor_field_t)               , intent(inout) :: result
  
  call result%init(0.0_rp)
  select case(this%swich)
     case(1) ! u = (x,-y,0)
        call result%set(1,1,1.0_rp)
        call result%set(2,2,-1.0_rp)
  end select

end subroutine velocity_gradient_get_value_space_time

!====================================================================================================
subroutine velocity_grad_div_get_value_space_time(this,point,time,result)
  implicit none
  class(velocity_grad_div_function_t), intent(in)    :: this
  type(point_t)                      , intent(in)    :: point
  real(rp)                           , intent(in)    :: time
  type(vector_field_t)               , intent(inout) :: result
  
  call result%init(0.0_rp)
  select case(this%swich)
     case(1) ! u = (x,-y,0)
  end select

end subroutine velocity_grad_div_get_value_space_time

!====================================================================================================
subroutine pressure_gradient_get_value_space_time(this,point,time,result)
  implicit none
  class(pressure_gradient_function_t), intent(in)    :: this
  type(point_t)                      , intent(in)    :: point
  real(rp)                           , intent(in)    :: time
  type(vector_field_t)               , intent(inout) :: result
  
  call result%init(0.0_rp)
  select case(this%swich)
     case(1) ! p = x+y
        call result%set(1,1.0_rp)
        call result%set(2,1.0_rp)
  end select

end subroutine pressure_gradient_get_value_space_time
