!==================================================================================================
subroutine finite_face_create(this,number_fe_spaces)
  implicit none
  class(finite_face_t), intent(inout) :: this
  integer(ip)         , intent(in)    :: number_fe_spaces

  integer(ip) :: istat
  this%number_fe_spaces = number_fe_spaces

  allocate(this%face_integrator(this%number_fe_spaces),stat = istat)
  check(istat == 0)
  
end subroutine finite_face_create

!==================================================================================================
subroutine finite_face_update_integration( this )
  implicit none
  class(finite_face_t), intent(inout) :: this 
  integer(ip) :: i
  
  ! Here we should pass the %cell%geo_reference_element instead of %reference_fe_geo BUT it is still
  ! not pointing to a reference_FE_t type of data.
  do i = 1, this%number_fe_spaces
     call this%face_integrator(i)%p%update(this%face_topology%relative_face,                      &
          &                           this%neighbour_fe(1)%p%reference_fe_geo,                    &
          &                           this%neighbour_fe(1)%p%reference_fe_phy(i)%p,               &
          &                           this%neighbour_fe(1)%p%cell%coordinates,                    &
          &                           this%neighbour_fe(2)%p%cell%coordinates)
  end do
end subroutine finite_face_update_integration

!==================================================================================================
subroutine finite_face_free(this)
  implicit none
  class(finite_face_t), intent(inout) :: this

  integer(ip) :: i

  this%face_topology => NULL()
  if (allocated(this%face_integrator)) deallocate (this%face_integrator)
  do i =1,2
     this%neighbour_fe(i)%p => NULL()
  end do
end subroutine finite_face_free

!==================================================================================================
function finite_face_get_face_map(this,i)
  implicit none
  class(finite_face_t), target, intent(in) :: this
  integer(ip)                 , intent(in) :: i
  type(fe_map_t)      , pointer            :: finite_face_get_face_map
  finite_face_get_face_map => this%face_integrator(i)%p%get_face_map()
end function finite_face_get_face_map

!==================================================================================================
function finite_face_get_face_quadrature(this,i)
  implicit none
  class(finite_face_t), target, intent(in) :: this
  integer(ip)                 , intent(in) :: i
  type(SB_quadrature_t)       , pointer    :: finite_face_get_face_quadrature
  finite_face_get_face_quadrature => this%face_integrator(i)%p%get_face_quadrature()
end function finite_face_get_face_quadrature

!==================================================================================================
function finite_face_get_face_integrator(this,i)
  implicit none
  class(finite_face_t), target, intent(in) :: this
  integer(ip)                 , intent(in) :: i
  type(face_integrator_t)     , pointer    :: finite_face_get_face_integrator
  finite_face_get_face_integrator => this%face_integrator(i)%p
end function finite_face_get_face_integrator
