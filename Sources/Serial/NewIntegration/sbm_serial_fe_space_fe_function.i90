 !===============================================================================================
 subroutine create_fe_function_scalar ( this, fe_space_id, fe_function_scalar )
    implicit none
    class(SB_serial_fe_space_t) , intent(in)    :: this
    integer(ip)                 , intent(in)    :: fe_space_id
    type(fe_function_scalar_t)  , intent(inout) :: fe_function_scalar

    assert ( fe_space_id >=1 .and. fe_space_id <= this%number_fe_spaces )
    assert ( this%reference_fe_phy_list(fe_space_id)%p%get_field_type() == field_type_scalar )
    
    call fe_function_scalar%create( fe_space_id, &
                                & this%reference_fe_phy_list(fe_space_id)%p%get_number_nodes(), &
                                & this%quadrature(1)%p%get_number_evaluation_points() )
 
 end subroutine create_fe_function_scalar

 !===============================================================================================
 subroutine create_fe_function_vector ( this, fe_space_id, fe_function_vector )
    implicit none
    class(SB_serial_fe_space_t) , intent(in)    :: this
    integer(ip)                 , intent(in)    :: fe_space_id
    type(fe_function_vector_t)  , intent(inout) :: fe_function_vector

    assert ( fe_space_id >=1 .and. fe_space_id <= this%number_fe_spaces )
    assert ( this%reference_fe_phy_list(fe_space_id)%p%get_field_type() == field_type_vector )

    call fe_function_vector%create( fe_space_id, &
                                & this%reference_fe_phy_list(fe_space_id)%p%get_number_nodes(), &
                                & this%quadrature(1)%p%get_number_evaluation_points() )
 
 end subroutine create_fe_function_vector

 !===============================================================================================
 subroutine create_fe_function_tensor ( this, fe_space_id, fe_function_tensor )
    implicit none
    class(SB_serial_fe_space_t) , intent(in)    :: this
    integer(ip)                 , intent(in)    :: fe_space_id
    type(fe_function_tensor_t)  , intent(inout) :: fe_function_tensor

    assert ( fe_space_id >=1 .and. fe_space_id <= this%number_fe_spaces )
    assert ( this%reference_fe_phy_list(fe_space_id)%p%get_field_type() == field_type_tensor )

    call fe_function_tensor%create( fe_space_id, &
                                & this%reference_fe_phy_list(fe_space_id)%p%get_number_nodes(), &
                                & this%quadrature(1)%p%get_number_evaluation_points() )
 
 end subroutine create_fe_function_tensor
