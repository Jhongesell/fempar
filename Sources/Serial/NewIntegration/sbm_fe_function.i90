!**************************************************************************************************
! Methods associated to fe_function_scalar_t
!**************************************************************************************************

 !===============================================================================================
 subroutine fe_function_scalar_create ( this, ifesp, max_nnode, max_npoint )
    implicit none
    class(fe_function_scalar_t), intent(inout) :: this 
    integer(ip)                , intent(in)    :: ifesp, max_nnode, max_npoint
    integer(ip)                                :: istat
    
    call this%free()
    
    this%fe_space_id = ifesp

    this%max_number_nodes = max_nnode
    this%max_number_quadrature_points = max_npoint
    
    allocate ( this%nodal_values(max_nnode), stat = istat )
    check(istat==0)
    
    allocate ( this%quadrature_points_values(max_npoint), stat = istat )
    check(istat==0)
    
 end subroutine fe_function_scalar_create

 !===============================================================================================
 function fe_function_scalar_get_fe_space_id ( this )
    implicit none
    class(fe_function_scalar_t), intent(in) :: this 
    integer(ip) :: fe_function_scalar_get_fe_space_id
    fe_function_scalar_get_fe_space_id = this%fe_space_id
 end function fe_function_scalar_get_fe_space_id

 !===============================================================================================
 function fe_function_scalar_get_nodal_values ( this )
    implicit none
    class(fe_function_scalar_t), target, intent(in) :: this 
    real(rp), pointer :: fe_function_scalar_get_nodal_values(:)
    fe_function_scalar_get_nodal_values => this%nodal_values
 end function fe_function_scalar_get_nodal_values
 
 !===============================================================================================
 function fe_function_scalar_get_quadrature_points_values ( this )
    implicit none
    class(fe_function_scalar_t), target, intent(in) :: this 
    real(rp), pointer :: fe_function_scalar_get_quadrature_points_values(:)
    fe_function_scalar_get_quadrature_points_values => this%quadrature_points_values
 end function fe_function_scalar_get_quadrature_points_values
 
 !===============================================================================================
 subroutine fe_function_scalar_get_value ( this, point, value )
    implicit none
    class(fe_function_scalar_t), intent(in)    :: this 
    integer(ip)                , intent(in)    :: point
    real(rp)                   , intent(inout) :: value
    
    assert ( point <= this%current_number_quadrature_points )
    value = this%quadrature_points_values(point)
    
 end subroutine fe_function_scalar_get_value

 !===============================================================================================
 subroutine fe_function_scalar_set_current_number_nodes ( this, value )
    implicit none
    class(fe_function_scalar_t), intent(inout) :: this 
    integer(ip)                , intent(in)    :: value
    
    assert ( value <= this%max_number_nodes )
    this%current_number_nodes = value
    
 end subroutine fe_function_scalar_set_current_number_nodes
 
 !===============================================================================================
 subroutine fe_function_scalar_set_current_number_quadrature_points ( this, value )
    implicit none
    class(fe_function_scalar_t), intent(inout) :: this 
    integer(ip)                , intent(in)    :: value
    
    assert ( value <= this%max_number_quadrature_points ) 
    this%current_number_quadrature_points = value
    
 end subroutine fe_function_scalar_set_current_number_quadrature_points
 
 !===============================================================================================
 subroutine fe_function_scalar_free ( this )
    implicit none
    class(fe_function_scalar_t), intent(inout) :: this 
    integer(ip)                                :: istat
    
    if (allocated(this%nodal_values)) then 
       deallocate ( this%nodal_values, stat = istat )
       check(istat==0)
    end if
    
    if (allocated(this%quadrature_points_values)) then
       deallocate ( this%quadrature_points_values, stat = istat )
       check(istat==0)
    end if
    
 end subroutine fe_function_scalar_free

 
!**************************************************************************************************
! Methods associated to fe_function_vector_t
!**************************************************************************************************

 !===============================================================================================
 subroutine fe_function_vector_create ( this, ifesp, max_nnode, max_npoint )
    implicit none
    class(fe_function_vector_t), intent(inout) :: this 
    integer(ip)                , intent(in)    :: ifesp, max_nnode, max_npoint
    integer(ip)                                :: istat
    
    call this%free()
    
    this%fe_space_id = ifesp

    this%max_number_nodes = max_nnode
    this%max_number_quadrature_points = max_npoint
    
    allocate ( this%nodal_values(max_nnode), stat = istat )
    check(istat==0)
    
    allocate ( this%quadrature_points_values(max_npoint), stat = istat )
    check(istat==0)
    
 end subroutine fe_function_vector_create

 !===============================================================================================
 function fe_function_vector_get_fe_space_id ( this )
    implicit none
    class(fe_function_vector_t), intent(in) :: this 
    integer(ip) :: fe_function_vector_get_fe_space_id
    fe_function_vector_get_fe_space_id = this%fe_space_id
 end function fe_function_vector_get_fe_space_id

 !===============================================================================================
 function fe_function_vector_get_nodal_values ( this )
    implicit none
    class(fe_function_vector_t), target, intent(in) :: this 
    real(rp), pointer :: fe_function_vector_get_nodal_values(:)
    fe_function_vector_get_nodal_values => this%nodal_values
 end function fe_function_vector_get_nodal_values
 
 !===============================================================================================
 function fe_function_vector_get_quadrature_points_values ( this )
    implicit none
    class(fe_function_vector_t), target, intent(in) :: this 
    type(vector_field_t), pointer :: fe_function_vector_get_quadrature_points_values(:)
    fe_function_vector_get_quadrature_points_values => this%quadrature_points_values
 end function fe_function_vector_get_quadrature_points_values
 
 !===============================================================================================
 subroutine fe_function_vector_get_value ( this, point, value )
    implicit none
    class(fe_function_vector_t), intent(in)    :: this 
    integer(ip)                , intent(in)    :: point
    type(vector_field_t)       , intent(inout) :: value
    
    assert ( point <= this%current_number_quadrature_points )
    value = this%quadrature_points_values(point)
    
 end subroutine fe_function_vector_get_value

 !===============================================================================================
 subroutine fe_function_vector_set_current_number_nodes ( this, value )
    implicit none
    class(fe_function_vector_t), intent(inout) :: this 
    integer(ip)                , intent(in)    :: value
    
    assert ( value <= this%max_number_nodes )
    this%current_number_nodes = value
    
 end subroutine fe_function_vector_set_current_number_nodes
 
 !===============================================================================================
 subroutine fe_function_vector_set_current_number_quadrature_points ( this, value )
    implicit none
    class(fe_function_vector_t), intent(inout) :: this 
    integer(ip)                , intent(in)    :: value
    
    assert ( value <= this%max_number_quadrature_points ) 
    this%current_number_quadrature_points = value
    
 end subroutine fe_function_vector_set_current_number_quadrature_points
 
 !===============================================================================================
 subroutine fe_function_vector_free ( this )
    implicit none
    class(fe_function_vector_t), intent(inout) :: this 
    integer(ip)                                :: istat
    
    if (allocated(this%nodal_values)) then 
       deallocate ( this%nodal_values, stat = istat )
       check(istat==0)
    end if
    
    if (allocated(this%quadrature_points_values)) then
       deallocate ( this%quadrature_points_values, stat = istat )
       check(istat==0)
    end if
    
 end subroutine fe_function_vector_free
 
 
!**************************************************************************************************
! Methods associated to fe_function_tensor_t
!**************************************************************************************************

 !===============================================================================================
 subroutine fe_function_tensor_create ( this, ifesp, max_nnode, max_npoint )
    implicit none
    class(fe_function_tensor_t), intent(inout) :: this 
    integer(ip)                , intent(in)    :: ifesp, max_nnode, max_npoint
    integer(ip)                                :: istat
    
    call this%free()
    
    this%fe_space_id = ifesp

    this%max_number_nodes = max_nnode
    this%max_number_quadrature_points = max_npoint
    
    allocate ( this%nodal_values(max_nnode), stat = istat )
    check(istat==0)
    
    allocate ( this%quadrature_points_values(max_npoint), stat = istat )
    check(istat==0)
    
 end subroutine fe_function_tensor_create

 !===============================================================================================
 function fe_function_tensor_get_fe_space_id ( this )
    implicit none
    class(fe_function_tensor_t), intent(in) :: this 
    integer(ip) :: fe_function_tensor_get_fe_space_id
    fe_function_tensor_get_fe_space_id = this%fe_space_id
 end function fe_function_tensor_get_fe_space_id

 !===============================================================================================
 function fe_function_tensor_get_nodal_values ( this )
    implicit none
    class(fe_function_tensor_t), target, intent(in) :: this 
    real(rp), pointer :: fe_function_tensor_get_nodal_values(:)
    fe_function_tensor_get_nodal_values => this%nodal_values
 end function fe_function_tensor_get_nodal_values
 
 !===============================================================================================
 function fe_function_tensor_get_quadrature_points_values ( this )
    implicit none
    class(fe_function_tensor_t), target, intent(in) :: this 
    type(tensor_field_t), pointer :: fe_function_tensor_get_quadrature_points_values(:)
    fe_function_tensor_get_quadrature_points_values => this%quadrature_points_values
 end function fe_function_tensor_get_quadrature_points_values
 
 !===============================================================================================
 subroutine fe_function_tensor_get_value ( this, point, value )
    implicit none
    class(fe_function_tensor_t), intent(in)    :: this 
    integer(ip)                , intent(in)    :: point
    type(tensor_field_t)       , intent(inout) :: value
    
    assert ( point <= this%current_number_quadrature_points )
    value = this%quadrature_points_values(point)
    
 end subroutine fe_function_tensor_get_value

 !===============================================================================================
 subroutine fe_function_tensor_set_current_number_nodes ( this, value )
    implicit none
    class(fe_function_tensor_t), intent(inout) :: this 
    integer(ip)                , intent(in)    :: value
    
    assert ( value <= this%max_number_nodes )
    this%current_number_nodes = value
    
 end subroutine fe_function_tensor_set_current_number_nodes
 
 !===============================================================================================
 subroutine fe_function_tensor_set_current_number_quadrature_points ( this, value )
    implicit none
    class(fe_function_tensor_t), intent(inout) :: this 
    integer(ip)                , intent(in)    :: value
    
    assert ( value <= this%max_number_quadrature_points ) 
    this%current_number_quadrature_points = value
    
 end subroutine fe_function_tensor_set_current_number_quadrature_points
 
 !===============================================================================================
 subroutine fe_function_tensor_free ( this )
    implicit none
    class(fe_function_tensor_t), intent(inout) :: this 
    integer(ip)                                :: istat
    
    if (allocated(this%nodal_values)) then 
       deallocate ( this%nodal_values, stat = istat )
       check(istat==0)
    end if
    
    if (allocated(this%quadrature_points_values)) then
       deallocate ( this%quadrature_points_values, stat = istat )
       check(istat==0)
    end if
    
 end subroutine fe_function_tensor_free
