
subroutine fe_create( this, reference_fe_unk, reference_fe_geo, volume_integrator, cell)!, field_unknowns )
 implicit none
 class(SB_finite_element_t), intent(inout)  :: this
 class(reference_fe_t), target, intent(in) :: reference_fe_unk, reference_fe_geo
 type(SB_volume_integrator_t), target, intent(in) :: volume_integrator
 type(elem_topology_t), target, intent(in) :: cell
 !integer(ip), intent(in) :: field_unknowns

 this%reference_fe => reference_fe_unk
 this%geometry_reference_fe => reference_fe_geo
 this%volume_integrator => volume_integrator
 this%cell => cell  

 call memalloc( reference_fe_unk%get_number_nodes(), this%elem2dof, __FILE__, __LINE__)
 this%elem2dof = 0

end subroutine fe_create

subroutine fe_free( this)
 implicit none
 class(SB_finite_element_t), intent(inout)  :: this

 nullify(this%reference_fe)
 nullify(this%geometry_reference_fe)
 nullify(this%volume_integrator)
 nullify(this%cell)

 if(allocated(this%elem2dof)) call memfree(this%elem2dof, __FILE__, __LINE__)
 if(allocated(this%bc_code)) call memfree(this%bc_code, __FILE__, __LINE__)


end subroutine fe_free

subroutine fe_print( this )
 implicit none
 class(SB_finite_element_t), intent(in)  :: this

 write(*,*) '********************REFERENCE FE UNK********************'
 call this%reference_fe%print()
 write(*,*) '********************REFERENCE FE UNK********************'
 call this%geometry_reference_fe%print()
 write(*,*) '********************CELL********************'
 call element_print( 6, this%cell )
 write(*,*) '********************ELEMENT 2 DOF********************'
 write(*,*) this%elem2dof
 write(*,*) '********************BC CODE********************'
 write(*,*) this%bc_code


end subroutine fe_print

function fe_get_reference_fe ( this )
 implicit none
 class(SB_finite_element_t), target, intent(in)  :: this
 class(reference_fe_t), pointer :: fe_get_reference_fe
 fe_get_reference_fe => this%reference_fe
end function fe_get_reference_fe

function fe_get_volume_integrator ( this )
 implicit none
 class(SB_finite_element_t), target, intent(in)  :: this
 type(SB_volume_integrator_t), pointer :: fe_get_volume_integrator
 fe_get_volume_integrator => this%volume_integrator
end function fe_get_volume_integrator

function fe_get_elem2dof ( this )
 implicit none
 class(SB_finite_element_t), target, intent(in)  :: this
 integer(ip), pointer :: fe_get_elem2dof(:)
 fe_get_elem2dof => this%elem2dof
end function fe_get_elem2dof

subroutine finite_element_size (this, n)
 implicit none
 class(SB_finite_element_t), intent(in)  :: this
 integer(ip)            , intent(out) :: n

end subroutine finite_element_size

subroutine finite_element_pack (this, n, buffer)
 implicit none
 class(SB_finite_element_t), intent(in)  :: this
 integer(ip)            , intent(in)   :: n
 integer(ieep)            , intent(out)  :: buffer(n)

end subroutine finite_element_pack

subroutine finite_element_unpack(this, n, buffer)
 implicit none
 class(SB_finite_element_t), intent(inout) :: this
 integer(ip)            , intent(in)     :: n
 integer(ieep)            , intent(in)     :: buffer(n)

end subroutine finite_element_unpack

subroutine finite_element_assignment(this,that)
  implicit none
  class(SB_finite_element_t)   , intent(inout) :: this
  class(migratory_element_t), intent(in)    :: that
  select type(that)
  class is(SB_finite_element_t)
     this=that
  class default
     write(*,*) 'Error calling finite_element_t assignment'
     write(*,*) 'cannot assign object of another class'
     check(.false.)
  end select
end subroutine finite_element_assignment
