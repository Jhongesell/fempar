
!====================================================================================================
! Allocate and initialize the values of the face quadrature
subroutine face_quadrature_create ( this, number_dimensions, number_integration_points_x_face, &
     &                              number_faces_x_element )
  implicit none       
  class(face_quadrature_t), intent(inout) :: this
  integer(ip)             , intent(in)    :: number_dimensions
  integer(ip)             , intent(in)    :: number_integration_points_x_face
  integer(ip)             , intent(in)    :: number_faces_x_element
  
  call this%free()
  this%number_dimensions = number_dimensions
  this%number_integration_points_x_face = number_integration_points_x_face
  this%number_faces_x_element = number_faces_x_element
  call memalloc(number_dimensions,number_integration_points_x_face,number_faces_x_element, &
       &        this%coordinates,__FILE__,__LINE__)
  this%coordinates=0.0_rp
end subroutine face_quadrature_create

!====================================================================================================
! Free the memory and set the values of the face quadrature to zero
subroutine face_quadrature_free ( this )
  implicit none
  class(face_quadrature_t), intent(inout) :: this
  this%number_dimensions = 0             
  this%number_integration_points_x_face = 0
  this%number_faces_x_element = 0
  if (allocated(this%coordinates)) call memfree(this%coordinates,__FILE__,__LINE__)
end subroutine face_quadrature_free

!====================================================================================================
! Print the values in face_quadrature to a desired file
subroutine face_quadrature_print( this, lunio )
  implicit none
  class(face_quadrature_t), intent(inout) :: this
  integer(ip)             , intent(in)    :: lunio

  ! Local variables
  integer(ip) :: igaus, iface

  write(lunio,*) 'Face quadrature parameters --------------------------------'
  write(lunio,*) 'number_dimensions:'              , this%number_dimensions
  write(lunio,*) 'number_faces_x_element'          , this%number_faces_x_element
  write(lunio,*) 'number_integration_points_x_face', this%number_integration_points_x_face

  write(lunio,*) 'Coordinates'
  do iface = 1,  this%number_faces_x_element
     write(lunio,*) 'FACE', iface
     do igaus = 1, this%number_integration_points_x_face
        write(lunio,*) this%coordinates(:,igaus,iface)
     end do
  end do
end subroutine face_quadrature_print
