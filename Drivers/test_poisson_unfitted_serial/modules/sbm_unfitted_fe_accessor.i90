! Copyright (C) 2014 Santiago Badia, Alberto F. Mart√≠n and Javier Principe
!
! This file is part of FEMPAR (Finite Element Multiphysics PARallel library)
!
! FEMPAR is free software: you can redistribute it and/or modify
! it under the terms of the GNU General Public License as published by
! the Free Software Foundation, either version 3 of the License, or
! (at your option) any later version.
!
! FEMPAR is distributed in the hope that it will be useful,
! but WITHOUT ANY WARRANTY; without even the implied warranty of
! MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
! GNU General Public License for more details.
!
! You should have received a copy of the GNU General Public License
! along with FEMPAR. If not, see <http://www.gnu.org/licenses/>.
!
! Additional permission under GNU GPL version 3 section 7
!
! If you modify this Program, or any covered work, by linking or combining it 
! with the Intel Math Kernel Library and/or the Watson Sparse Matrix Package 
! and/or the HSL Mathematical Software Library (or a modified version of them), 
! containing parts covered by the terms of their respective licenses, the
! licensors of this Program grant you additional permission to convey the 
! resulting work. 
!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

subroutine unfitted_fe_accessor_create( this, lid, fe_space )
  implicit none
  class(unfitted_fe_accessor_t)   , intent(inout) :: this
  integer(ip)                     , intent(in)    :: lid
  class(serial_fe_space_t), target, intent(in)    :: fe_space
  call this%free()
  call this%fe_accessor_t%create(lid,fe_space)
  select type(fe_space)
  class is (serial_unfitted_fe_space_t)
    this%unfitted_fe_space => fe_space
  class default
    check(.false.)
  end select
end subroutine unfitted_fe_accessor_create

!-----------------------------------------------------------------------------------------------------

subroutine unfitted_fe_accessor_free( this )
  implicit none
  class(unfitted_fe_accessor_t)   , intent(inout) :: this
  call this%fe_accessor_t%free()
  nullify ( this%unfitted_fe_space )
end subroutine unfitted_fe_accessor_free

