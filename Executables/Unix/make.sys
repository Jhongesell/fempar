# Copyright (C) 2014 Santiago Badia, Alberto F. Mart√≠n and Javier Principe
#
# This file is part of FEMPAR (Finite Element Multiphysics PARallel library)
#
# FEMPAR is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# FEMPAR is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with FEMPAR. If not, see <http://www.gnu.org/licenses/>.
#
# Additional permission under GNU GPL version 3 section 7
#
# If you modify this Program, or any covered work, by linking or combining it 
# with the Intel Math Kernel Library and/or the Watson Sparse Matrix Package 
# and/or the HSL Mathematical Software Library (or a modified version of them), 
# containing parts covered by the terms of their respective licenses, the
# licensors of this Program grant you additional permission to convey the 
# resulting work. 
#
###############################################################################
#
#  FEMPAR external dependencies 
#
DEPSG_LIB=
DEPSO_LIB=
ENABLED=
#
# 1) BLAS
#
ifeq ($(strip $(ENABLE_BLAS)),)
    BLAS_LIB =
    BLAS_DIR =
else
  ifeq ($(COMPILER),XLF)
    BLAS_LIB = -lesslbg -llapack -lesslbg
    BLAS_DIR = -L$(LAPACK_LIB) -L$(BLAS_ROOT)
  endif
  # For Intel and GNU compilers they are included in MKL
  ENABLED+=ENABLE_BLAS
endif
#
# 2) MKL
#
ifeq ($(strip $(ENABLE_MKL)),)
   MKL_DIR=
   MKL_MOD=
   MKL_LIB=
else
   ENABLED+=ENABLE_MKL
   #-----------------------------------------------------------------------
   # Configure MKL_LIBS link line according to user-prescribed environment variables
   # Link lines were extracted from the following
   # URL: http://software.intel.com/en-us/articles/intel-mkl-link-line-advisor/
   #
   # - MKL_ROOT: absolute path, Intel MKL library installation directory.
   #
   # - MKL_VERSION: version of the MKL library which can be: 10.0 10.2 10.3 11.0 11.1
   #
   ifdef MKL_ROOT
     MKL_DIR= -L$(MKL_ROOT) # Give the final directory for another MKL version (leaving MKL_VERSION undefined)
     MKL_MOD=-$I$(MKL_ROOT)/include
     ifdef MKL_VERSION
       ifneq ( $(strip $(findstring $(MKL_VERSION), 10.0 10.2)),)
          MKL_DIR= -L$(MKL_ROOT)/lib/em64t
       endif
       ifneq ( $(strip $(findstring $(MKL_VERSION), 10.3 11.0 11.1)),)
          MKL_DIR= -L$(MKL_ROOT)/lib/intel64
       endif
     endif
     ifeq ($(FEMPAR_THREADS),OMP)
       ifeq ($(COMPILER),INTEL)
         MKL_LIB= -lmkl_intel_lp64 -lmkl_intel_thread -lmkl_core -lpthread # 32-bit integer, MKL multithreaded, libiomp5 
       endif
       ifeq ($(COMPILER),GNU)
         MKL_LIB= -lmkl_gf_lp64 -lmkl_gnu_thread -lmkl_core -lpthread      
       endif
     else
       ifeq ($(COMPILER),INTEL)
         MKL_LIB= -lmkl_intel_lp64 -lmkl_sequential -lmkl_core -lpthread # 32-bit integer, MKL sequential
       endif
       ifeq ($(COMPILER),GNU)
         MKL_LIB= -lmkl_gf_lp64 -lmkl_sequential -lmkl_core -lpthread
       endif
     endif
   endif
endif

# 3) GIDPOST
ifeq ($(strip $(ENABLE_GIDPOST)),)
  GIDPOST_DIR=
  GIDPOST_LIB=
else
  ENABLED+=ENABLE_GIDPOST
  GIDPOST_DIR= -L$(GIDPOST_ROOT)/unix/$(COMPILER)
  ifeq ($(V),g)
    DEPSG_LIB+=$(GIDPOST_ROOT)/unix/$(COMPILER)/libgidpost_g.a
    GIDPOST_LIB= -lgidpost_g
  else
    DEPSO_LIB+=$(GIDPOST_ROOT)/unix/$(COMPILER)/libgidpost_O.a
    GIDPOST_LIB= -lgidpost_O
  endif
endif

# 4) Define compilation and linking options for metis
ifeq ($(strip $(ENABLE_METIS4)),)
  METIS_DIR=
  METIS_LIB=
else
  ENABLED+=ENABLE_METIS4
  ifeq ($(V),g)
    METIS_DIR= -L$(METIS4_ROOT).$(COMPILER).g
    DEPSG_LIB+=$(METIS4_ROOT).$(COMPILER)/libfpmetis_g.a 
    METIS_LIB= -lfpmetis_g
  else
    METIS_DIR= -L$(METIS4_ROOT).$(COMPILER).O
    DEPSO_LIB+=$(METIS4_ROOT).$(COMPILER)/libfpmetis_O.a 
    METIS_LIB= -lfpmetis_O
  endif
endif
ifeq ($(strip $(ENABLE_METIS5)),)
  ifeq ($(strip $(ENABLE_METIS4)),)
     METIS_DIR=	   
     METIS_LIB=
  endif
else
  ENABLED+=ENABLE_METIS5
  METIS_DIR= -L$(METIS5_ROOT)/$(COMPILER)/lib
  ifeq ($(V),g)
    DEPSG_LIB+=$(METIS5_ROOT)/$(COMPILER)/lib/libfpmetis_g.a 
    METIS_LIB= -lfpmetis_g
  else
    DEPSO_LIB+=$(METIS5_ROOT)/$(COMPILER)/lib/libfpmetis_O.a 
    METIS_LIB= -lfpmetis_O
  endif
endif

# 5) Define compilation and linking options for ZOLTAN, PARMETIS and PTSCOTCH
ifeq ($(strip $(ENABLE_ZOLTAN)),)
  ZOLTAN_LIB=
  ZOLTAN_DIR=
else
  ENABLED+=ENABLE_ZOLTAN
  ifeq ($(strip $(ENABLE_PARMETIS)),)
    ZOLTAN_DIR=-L$(ZOLTAN_ROOT)/$(COMPILER)/lib
    ifeq ($(V),g)
      ZOLTAN_LIB=-lzoltan_g
      DEPSG_LIB+=$(ZOLTAN_ROOT)/$(COMPILER)/lib/libzoltan_g.a
    else
      ZOLTAN_LIB=-lzoltan_O
      DEPSO_LIB+=$(ZOLTAN_ROOT)/$(COMPILER)/lib/libzoltan_O.a
    endif
  else
    ZOLTAN_DIR=-L$(ZOLTAN_ROOT)/$(COMPILER)/lib -L$(PARMETIS_ROOT)/$(COMPILER)/lib
    ifeq ($(V),g)
      ZOLTAN_LIB=-lzoltan_g -lparmetis_g -lmetis_g
      DEPSG_LIB+=$(ZOLTAN_ROOT)/$(COMPILER)/lib/libzoltan_g.a
      DEPSG_LIB+=$(PARMETIS_ROOT)/$(COMPILER)/lib/libparmetis_g.a
      DEPSG_LIB+=$(PARMETIS_ROOT)/$(COMPILER)/lib/libmetis_g.a
    else
      ZOLTAN_LIB=-lzoltan_O -lparmetis_O -lmetis_O
      DEPSO_LIB+=$(ZOLTAN_ROOT)/$(COMPILER)/lib/libzoltan_O.a
      DEPSO_LIB+=$(PARMETIS_ROOT)/$(COMPILER)/lib/libparmetis_O.a
      DEPSO_LIB+=$(PARMETIS_ROOT)/$(COMPILER)/lib/libmetis_O.a
    endif
  endif
  ifneq ($(strip $(ENABLE_PTSCOTCH)),)
    ZOLTAN_DIR+=-L$(PTSCOTCH_ROOT)/$(COMPILER)/lib
    ZOLTAN_LIB+=-lptscotch -lptscotcherr
    # Only one version of ptscotch right now
    DEPSG_LIB+=$(PTSCOTCH_ROOT)/$(COMPILER)/libptscotch.a
    DEPSG_LIB+=$(PTSCOTCH_ROOT)/$(COMPILER)/libptscotcherr.a 
  endif
endif

# 6) Define compilation and linking options for WSMP
ifeq ($(strip $(ENABLE_WSMP)),)
  WSMP_LIB=
  WSMP_DIR=
else
  ENABLED+=ENABLE_WSMP
  WSMP_DIR=-L$(WSMP_ROOT)/lib
  WSMP_LIB=-lwsmp64
  DEPSG_LIB+=$(WSMP_ROOT)/libwsmp64.a
endif

# 7) Define compilation and linking options for HSL_MI20
ifeq ($(strip $(ENABLE_HSL_MI20)),)
  HSL_MI20_LIB=
  HSL_MI20_DIR=
  HSL_MI20_MOD=
else
  ENABLED+=ENABLE_HSL_MI20
  HSL_MI20_DIR=-L$(HSL_MI20_ROOT)/$(COMPILER)/lib
  ifeq ($(V),g)
    HSL_MI20_LIB=-lhsl_mi20_g
    HSL_MI20_MOD=-$I$(HSL_MI20_ROOT)/$(COMPILER)/modules_g
    DEPSG_LIB+=$(HSL_MI20_ROOT)/$(COMPILER)/libhsl_mi20_g.a
  else
    HSL_MI20_LIB=-lhsl_mi20_O
    HSL_MI20_MOD=-$I$(HSL_MI20_ROOT)/$(COMPILER)/modules_O
    DEPSO_LIB+=$(HSL_MI20_ROOT)/$(COMPILER)/libhsl_mi20_O.a
  endif
endif

# 8) Define compilation and linking options for HSL_MA87
ifeq ($(strip $(ENABLE_HSL_MA87)),)
  HSL_MA87_LIB=
  HSL_MA87_DIR=
  HSL_MA87_MOD=
else
  ENABLED+=ENABLE_HSL_MA87
  HSL_MA87_DIR=-L$(HSL_MA87_ROOT)/$(COMPILER)/lib
  ifeq ($(V),g)
    HSL_MA87_LIB=-lhsl_ma87_g
    HSL_MA87_MOD=-$I$(HSL_MA87_ROOT)/$(COMPILER)/modules_g
    DEPSG_LIB+=$(HSL_MA87_ROOT)/$(COMPILER)/libhsl_ma87_g.a
  else
    HSL_MA87_LIB=-lhsl_ma87_O
    HSL_MA87_MOD=-$I$(HSL_MA87_ROOT)/$(COMPILER)/modules_O
    DEPSO_LIB+=$(HSL_MA87_ROOT)/$(COMPILER)/libhsl_ma87_O.a
  endif
endif

# 9) Define compilation and linking options for TRILINOS
# ALberto: here only the TRILINOS INTERFACES are linked
# but when ENABLE_TRILINOS is set, we should also link
# against Trilinos itself. I leave it to you...if it's
# used again, we would need to set also TRILINOS_ROOT
#
ifeq ($(strip $(ENABLE_TRILINOS)),)
  TRILINOS_LIB=
  TRILINOS_DIR=
else
  ENABLED+=ENABLE_TRILINOS
  TRILINOS_DIR=-L$(TRILINOS_INTERFACES_ROOT)/lib
  TRILINOS_LIB=-ltrilinosflatinterfaces
  DEPSG_LIB+=$(TRILINOS_INTERFACES_ROOT)/libtrilinosflatinterfaces.so
endif

# 10) p4est
#
ifeq ($(strip $(ENABLE_P4EST)),)
  P4EST_DIR=
  P4EST_LIB=
else
  ENABLED+=ENABLE_P4EST
  
  #TODO: libraries for different systems/compilers should be distinguished for p4est itself (done only for p4est-fempar-interface)
  P4EST_DIR= -L$(P4EST_ROOT)/local/lib/ -L$(P4EST_WRAPPER_ROOT)/Unix/$(COMPILER)/
  
  #TODO: debug and release version should be distinguished for p4est itself (done only for p4est-fempar-interface)
  ifeq ($(V),g)
    DEPSG_LIB+=$(P4EST_ROOT)/local/lib/libp4est.a $(P4EST_ROOT)/local/lib/libsc.a $(P4EST_WRAPPER_ROOT)/Unix/$(COMPILER)/libp4est-fempar-interface_g.a
    P4EST_LIB= -lp4est -lsc
    P4EST_WRAPPER_LIB = -lp4est-fempar-interface_g
  else
    DEPSG_LIB+=$(P4EST_ROOT)/local/lib/libp4est.a $(P4EST_ROOT)/local/lib/libsc.a $(P4EST_WRAPPER_ROOT)/Unix/$(COMPILER)/libp4est-fempar-interface_O.a
    P4EST_LIB= -lp4est -lsc
    P4EST_WRAPPER_LIB = -lp4est-fempar-interface_O
  endif
endif

# 11) UMFPACK 
#
ifeq ($(strip $(ENABLE_UMFPACK)),)
  UMFPACK_DIR=
  UMFPACK_LIB=
else
  ENABLED+=ENABLE_UMFPACK

  #TODO: libraries for different systems/compilers should be distinguished for p4est itself (done only for p4est-fempar-interface)
  UMFPACK_DIR=-L$(UMFPACK_ROOT)/$(COMPILER)/lib

  #TODO: debug and release version should be distinguished for p4est itself (done only for p4est-fempar-interface)
  ifeq ($(V),g)
    DEPSG_LIB+=$(UMFPACK_ROOT)/$(COMPILER)/lib/libumfpack_g.a $(UMFPACK_ROOT)/$(COMPILER)/lib/libamd_g.a $(UMFPACK_ROOT)/$(COMPILER)/lib/libsuitesparseconfig_g.a $(UMFPACK_ROOT)/$(COMPILER)/lib/libcholmod_g.a 
    DEPSG_LIB+=$(UMFPACK_ROOT)/$(COMPILER)/lib/libcolamd_g.a $(UMFPACK_ROOT)/$(COMPILER)/lib/libmetis_g.a $(UMFPACK_ROOT)/$(COMPILER)/lib/libccolamd_g.a $(UMFPACK_ROOT)/$(COMPILER)/lib/libcamd_g.a
    UMFPACK_LIB= -lumfpack_g -lamd_g -lsuitesparseconfig_g -lcholmod_g -lcolamd_g -lccolamd_g -lcamd_g -lmetis_g -lm -lrt 
  else
    DEPSG_LIB+=$(UMFPACK_ROOT)/$(COMPILER)/lib/libumfpack_O.a $(UMFPACK_ROOT)/$(COMPILER)/lib/libamd_O.a $(UMFPACK_ROOT)/$(COMPILER)/lib/libsuitesparseconfig_O.a $(UMFPACK_ROOT)/$(COMPILER)/lib/libcholmod_O.a 
    DEPSG_LIB+=$(UMFPACK_ROOT)/$(COMPILER)/lib/libcolamd_O.a $(UMFPACK_ROOT)/$(COMPILER)/lib/libmetis_O.a $(UMFPACK_ROOT)/$(COMPILER)/lib/libccolamd_O.a $(UMFPACK_ROOT)/$(COMPILER)/lib/libcamd_O.a
    UMFPACK_LIB= -lumfpack_O -lamd_O -lsuitesparseconfig_O -lcholmod_O -lcolamd_O -lmetis_O -lccolamd_O -lcamd_O -lmetis_O -lm -lrt 
  endif
endif



#
# Substitute whitespaces by commas in to form macros.
comma:= ,
empty:=
space:= $(empty) $(empty)
MACROS=$(subst $(space),$(comma),$(ENABLED))

